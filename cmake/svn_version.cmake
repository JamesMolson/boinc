SET(HEADER "svn_version.h")

FILE(WRITE ${CMAKE_BINARY_DIR}/${HEADER} "#ifndef SVN_VERSION_H\n#define SVN_VERSION_H\n\n")

FIND_FILE(GIT_SVN NAME .git/svn HINTS ${CMAKE_SOURCE_DIR} NO_DEFAULT_PATH)
FIND_FILE(GIT_NOSVN NAME .git HINTS ${CMAKE_SOURCE_DIR} NO_DEFAULT_PATH)
FIND_FILE(SVN_NOGIT NAME .svn HINTS ${CMAKE_SOURCE_DIR} NO_DEFAULT_PATH)

if(GIT_SVN)
	SET(RUN_CMD "git svn info")
elseif(GIT_NOSVN)
	EXECUTE_PROCESS(COMMAND git log -n1 --pretty=format:%H WORKING_DIRECTORY ${CMAKE_SOURCE_DIR} OUTPUT_VARIABLE GIT_LOG)
	STRING(STRIP ${GIT_LOG} GIT_LOG)

	SITE_NAME(HOST)

	EXECUTE_PROCESS(COMMAND git symbolic-ref --short HEAD WORKING_DIRECTORY ${CMAKE_SOURCE_DIR} OUTPUT_VARIABLE BRANCH)
	STRING(STRIP ${BRANCH} BRANCH)

	EXECUTE_PROCESS(COMMAND git config --get branch.${BRANCH}.remote WORKING_DIRECTORY ${CMAKE_SOURCE_DIR} RESULT_VARIABLE REMOTE_RETURN OUTPUT_VARIABLE REMOTE)
	STRING(STRIP ${REMOTE} REMOTE)

	if(${REMOTE_RETURN})
		SET(REMOTE "origin")		
	endif(${REMOTE_RETURN})

	EXECUTE_PROCESS(COMMAND git config --get remote.${REMOTE}.url WORKING_DIRECTORY ${CMAKE_SOURCE_DIR} OUTPUT_VARIABLE URL)
	STRING(STRIP ${URL} URL)

	EXECUTE_PROCESS(COMMAND git log -n1 --pretty=format:%ct WORKING_DIRECTORY ${CMAKE_SOURCE_DIR} OUTPUT_VARIABLE DATE)
	STRING(STRIP ${DATE} DATE)
elseif(SVN_NOGIT)
	SET(RUN_CMD "svn info")
else()
	SET(RUN_CMD "")
endif()
#message(STATUS ${RUN_CMD})

if(NOT ${GIT_LOG})
	FILE(APPEND ${CMAKE_BINARY_DIR}/${HEADER} "#define SVN_VERSION \"${GIT_LOG} [${URL}] (${HOST}:${CMAKE_SOURCE_DIR} [${BRANCH}])\"\n")
	STRING(SUBSTRING ${GIT_LOG} 0 8 GIT_LOG_CUT)
	FILE(APPEND ${CMAKE_BINARY_DIR}/${HEADER} "#define GIT_REVISION 0x${GIT_LOG_CUT}\n")
	FILE(APPEND ${CMAKE_BINARY_DIR}/${HEADER} "#define GIT_DATE ${DATE}\n")
	if(NOT ${URL})
		STRING(TOUPPER ${URL} URL)
		STRING(REPLACE ".GIT" "" URL ${URL})
		STRING(REGEX MATCH ".*://(.*)$" URL_STRING ${URL})
		STRING(REPLACE "." "_" URL_STRING ${CMAKE_MATCH_1})
		STRING(REPLACE "/" "_" URL_STRING ${URL_STRING})
		FILE(APPEND ${CMAKE_BINARY_DIR}/${HEADER} "#define REPOSITORY_${URL_STRING} 1\n")
	endif(NOT ${URL})
elseif(NOT ${RUN_CMD})
	EXECUTE_PROCESS(COMMAND ${RUN_CMD} WORKING_DIRECTORY ${CMAKE_SOURCE_DIR} OUTPUT_VARIABLE SVN_CMD)
	SET(REV 1)
	FILE(APPEND ${CMAKE_BINARY_DIR}/${HEADER} "#define SVN_VERSION \"Repository: ${URL} Revision: ${REV} \"")
	FILE(APPEND ${CMAKE_BINARY_DIR}/${HEADER} "#define SVN_REPOSITORY \" ${URL} \"")
	FILE(APPEND ${CMAKE_BINARY_DIR}/${HEADER} "#define SVN_REVISION  ${REV}")

#    LANG=C
#    URL=`$CMD | awk '
#                /^URL/ { url = $2; };
#                /^Rev/ { rev = $2; };
#                END { print "#define SVN_VERSION \"Repository: " url \
#                            " Revision: " rev "\"" >> "'"$HEADER"'";
#                      print "#define SVN_REPOSITORY \"" url "\"" >> "'"$HEADER"'";
#                      print "#define SVN_REVISION " rev >> "'"$HEADER"'";
#                      print url };'`
	if(NOT ${URL})
		STRING(TOUPPER ${URL} URL)
#		STRING(REPLACE ".GIT" "" URL ${URL})
		STRING(REGEX MATCH ".*://(.*)$" URL_STRING ${URL})
		STRING(REPLACE "." "_" URL_STRING ${CMAKE_MATCH_1})
		STRING(REPLACE "/" "_" URL_STRING ${URL_STRING})
		FILE(APPEND ${CMAKE_BINARY_DIR}/${HEADER} "#define REPOSITORY_${URL_STRING} 1\n")
	endif(NOT ${URL})
else()
	FILE(APPEND ${CMAKE_BINARY_DIR}/${HEADER} "#include \"version.h\"\n")
	FILE(APPEND ${CMAKE_BINARY_DIR}/${HEADER} "#define SVN_VERSION BOINC_VERSION_STRING")
endif()


FILE(APPEND ${CMAKE_BINARY_DIR}/${HEADER} "\n#endif")
